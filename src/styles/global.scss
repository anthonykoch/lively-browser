// Hello, this is the Scss entry point for the entire app's css.
//
// Things to know:
// ÃŸ
// 1. They are namespaced with `app-` so that they don't collide with any
//    third party variables.
// 2. All z-indexes except for ones declared as 1 or -1 are set in here;
// 3. SUIT is used for class naming cause I like the way it looks more
//    than BEM and it basically produces the same result.

@import 'variables';

@import '~normalize.css';
@import '~animate.css';
@import 'tooltip';

*,
*:after,
*:before {
  box-sizing: inherit;
  margin: 0;
  padding: 0
}

html {
  box-sizing: border-box;
  overflow-x: hidden;
  width: 100%
}

body {
  font-family: $app-text-font-family;
  min-height: 100vh;
}

#{$app-headings} {
  font-weight: 500;
  font-family: $app-heading-font-family;
}

img {
  max-width: 100%;
}

p {
  font-family: $app-text-font-family;
  font-size: $app-text-font-size;
  font-weight: $app-text-font-weight;
  line-height: $app-text-line-height;
}

pre {
  font-family: $app-code-font-family;
  font-size: $app-code-font-size;
}




.markdown {
  $markdown-spacing: 30px;

  line-height: 1.6;
  margin-left: auto;
  margin-right: auto;

  p {
    margin-bottom: $markdown-spacing;
  }

  #{$app-headings} {
    margin-bottom: 1rem;
  }
}

.markdown--styled {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: $app-heading-font-family;
    font-weight: 400;
    padding-left: $app-article-padding;
    padding-right: $app-article-padding;
  }

  > h2 {
    // background-color: rgba(black, 0.06);
    letter-spacing: 1px;
    letter-spacing: 0.25px;
    font-size: 40px;
    font-weight: 500;
  }

  h3 {
    text-transform: uppercase;
    font-size: 14px;
    letter-spacing: 2px;
    color: #7a9c50;
  }

  // > h2 {
    // background-color: rgba(black, 0.06);
    // font-weight: 300;
    // font-size: 32px;
    // letter-spacing: 1px;
    // margin-bottom: 1.5rem;
    // padding-bottom: 0.25rem;
    // padding-top: 0.25rem;
  // }

  > p {
    font-family: $app-text-font-family;
    font-size: $app-text-font-size;
    padding-left: $app-article-padding;
    padding-right: $app-article-padding;
  }
}




.button {
  background-color: transparent;
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-family: inherit;
  font-size: 12px;
  font-weight: 500;
  user-select: none;
}

.button--default {
  border: 1px solid rgba(black, 0.2);
  border-radius: 3px;
  padding: 12px 20px;
  letter-spacing: 1px;
  min-width: 100px;
  text-transform: uppercase;
}

.button--rounded {
  border-radius: 200px;
}

.button + .button {
  margin-left: 12px;
}





.vue-codemirror {
  height: 100%;
}

.CodeMirror-lines {
  padding-top: 12px;
  padding-bottom: 300px;
}

.CodeMirror-linenumbers {
  // width: 50px;
}

.CodeMirror {
  height: 100%;
  font-family: $app-code-font-family;
  font-size: $app-code-font-size;
  line-height: $app-code-line-height;
}

.CodeMirror-line {
  line-height: inherit;
  font-family: inherit;
}

.CodeMirror-code > div {
  display: flex;
}

.CodeMirror-linewidget {
  height: 0;
  overflow: visible;
}

.CodeMirror-foldgutter {
  width: 1rem;
}

.CodeMirror pre {
  padding: 0 4px;
}



.WalkthoughtStep {
  // TODO: Figure out if it's possible to use a border that doesn't get split up
  background-color: rgba(#d8cc6d, 0.2);
  // outline: 1px solid #d8cc6d;
}





/**
 * 1. Needs ot match .CodeMirror pre left padding value
 */

.Phantom {
  color: #318e6c;
  display: inline-block;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  margin-left: 4px; // [1]
  // max-height: 200px;
  max-width: 1000px;
  // overflow: auto;
  position: relative;
  top: 0;
  max-width: 55ch;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  z-index: 1;
}

.Phantom-indent {
  white-space: pre;
  margin-left: 12px;
}

.Phantom-message {
  border-bottom: 1px solid transparent;
}

.Phantom-messageListItem {
  // background-color: rgba(226, 217, 217, 0.5);
  // color: rgba(black, 0.6);
}

.Phantom-messageListItem:nth-child(n+2) {
  margin-left: 2px;
}

.Phantom-messageListItem.is-error {
  color: #ef2f5a;
  border-bottom: 1px solid #ef2f5a;
}





$marker-coverage-covered: #47e286; // green
$marker-coverage-default: #ffffff;
$marker-coverage-uncovered: #eeeeee;
$marker-coverage-error: #e54545; // red

.CoveredBlock {
  border-bottom: 1px solid transparent;
}

.CoveredBlock.is-covered {
  border-color: rgba($marker-coverage-covered, 0.5);
}

.CoveredBlock.is-uncovered {
  border-color: rgba($marker-coverage-uncovered, 0.5);
}




.CoverageGutter {
  width: 20px;
}

.CoverageMarker {
  color: transparent;
  position: relative;

  &:after {
    background-color: $marker-coverage-default;
    border-radius: 2px;
    content: '';
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 8px;
    height: 8px;
    z-index: $app-coverage-marker-layer;
  }

}

.CoverageMarker.is-covered {
  &:after {
    background-color: $marker-coverage-covered;
  }
}

.CoverageMarker.is-uncovered {
  &:after {
    background-color: $marker-coverage-uncovered;
  }
}



.EditorPopup {
  background-color: $app-editor-popup-background; // rgba(245, 155, 155, 0.2);
  border-radius: 4px;
  box-shadow: $app-box-shadow-1;
  display: inline-block;
  justify-content: space-between;
  // transform: translate(-20%, 0);
  // transform: translateZ(0);
  max-height: 233px;
  max-width: 420px;
  overflow: auto;
  transition: 400ms opacity;
  z-index: $app-walthrough-popup-layer;

}

.EditorPopup-content,
.EditorPopup-header {
  padding: $app-editor-popup-padding-y $app-editor-popup-padding-r $app-editor-popup-padding-y $app-editor-popup-padding-l;
  max-width: 100%;
}

.EditorPopup-separator {
  border-bottom: 1px solid rgba(black, 0.1);
  display: block;
  width: 100%;
}

.EditorPopup-content {
  white-space: pre;
}

.EditorPopup-close {
  display: none;
  background-color: $color-error;
  border: 0;
  border-radius: 0 4px 4px 0;
  // bottom: 0;
  color: white;
  cursor: pointer;
  font-size: 14px;
  line-height: 1;
  line-height: 24px;
  outline: 0;
  text-align: center;
  // height: 22px;
  // padding: 2px 6px;
  // height: 20px;
  // width: 20px;
  // position: absolute;
  // right: 0;
  // top: 0;
  user-select: none;
  width: 22px;

  > span {
    line-height: inherit;
    // positi
  }
}






.EditorToolbar {
  position: fixed;
  display: flex;
  flex-direction: column;
  top: 16px;
  right: 16px;
  z-index: $app-editor-toolbar-layer;
}

.EditorToolbar-button {
  @include button;
  border-radius: 3px;
  box-shadow: 0 8px 22px -3px rgba(black, 0.5);
  color: white;
  font-size: 10px;
  height: 38px;
  padding: 0;
  margin-bottom: 0.5rem;
  position: relative;
  text-shadow: 0 1px 1px rgba(0,0,0,0.2);
  width: 42px;

  > span {
    filter: drop-shadow(3px 3px 6px rgba(black, 0.2));
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

.EditorToolbar-button.is-run {
  background-color: #d8cc6d;

  &.is-busy {
    background-color: $color-error;
    // hsla(11, 100%, 64%, 1);
  }

  > span {
    font-size: 14px;
  }
}

.EditorToolbar-button.is-settings {
  background-color: $color-info;

  > span {
    font-size: 18px;
  }
}


.EditorToolbar-button.is-walkthrough {
  background-color: rgba(245, 155, 155, 0.2);
}


