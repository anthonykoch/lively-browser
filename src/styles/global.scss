// Hello, this is the Scss entry point for the entire app's css.
//
// Things to know:
//
// 1. Variables are namespaced with `app-` so that they don't collide with
//    any third party variables.
// 2. All z-indexes except for ones declared as 1 or -1 are set in here;
// 3. SUIT is used for class naming cause I like the way it looks more
//    than BEM and it basically produces the same result.


@import 'variables';
@import 'transitions';

*,
*:after,
*:before {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

figure {
  margin: 0;
}

html {
  box-sizing: border-box;
  overflow-x: hidden;
  width: 100%;
}

body {
  color: #282828;
  font-family: $app-text-font-family;
  line-height: $app-text-line-height;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#{$app-headings} {
  font-weight: 500;
  font-family: $app-heading-font-family;
}

img {
  max-width: 100%;
}

p {
  font-family: $app-text-font-family;
  font-size: $app-text-font-size;
  font-weight: $app-text-font-weight;
  line-height: $app-text-line-height;
}

pre {
  font-family: $app-code-font-family;
  font-size: $app-code-font-size;
}

code {
  margin: 0 2px;
}

a:link,
a:visited {
  color: #6196cc;
  text-decoration: none;
}

a:hover,
a:active {
  color: #435589;
}






.vue-codemirror {
  height: 100%;
}

.CodeMirror-lines {
  padding-top: 12px;
  padding-bottom: 300px;
}

.CodeMirror-gutters,
.CodeMirror-gutters * {
  border-radius: 4px 0 0 4px;
}

.CodeMirror {
  border-radius: 0 4px 4px 0;
  border-radius: 4px;
}

.CodeMirror {
  height: 100%;
  font-family: $app-code-font-family;
  font-size: $app-code-font-size;
  line-height: $app-code-line-height;
}

.CodeMirror-line {
  line-height: inherit;
  font-family: inherit;
}

.CodeMirror-code > div {
  display: flex;
}

.CodeMirror-linewidget {
  height: 0;
  overflow: visible;
}

.CodeMirror-foldgutter {
  width: 1rem;
}

.CodeMirror pre {
  padding: 0 4px;
}

@media only screen and (max-width: 40em) {
  .CodeMirror-gutters,
  .CodeMirror-gutters *,
  .CodeMirror {
    border-radius: 0;
  }
}

.WalkthoughtStep {
  background-color: rgba(#d8cc6d, 0.2);
  // TODO: Figure out if it's possible to use a border that doesn't get split up
  // outline: 1px solid #d8cc6d;
}





/**
 * 1. Needs to match .CodeMirror pre left padding value
 */

.Phantom {
  color: #318e6c;
  display: inline-block;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  margin-left: 4px; // [1]
  // max-height: 200px;
  max-width: 1000px;
  // overflow: auto;
  position: relative;
  top: 0;
  max-width: 55ch;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  z-index: 1;
}

.Phantom-indent {
  white-space: pre;
  margin-left: 12px;
}

.Phantom-message {
  border-bottom: 1px solid transparent;
}

.Phantom-messageListItem:nth-child(n+2) {
  margin-left: 2px;
}

.Phantom-messageListItem.is-error {
  color: #ef2f5a;
  border-bottom: 1px solid #ef2f5a;
}





$marker-coverage-covered: #47e286; // green
$marker-coverage-default: #ffffff;
$marker-coverage-uncovered: #eeeeee;
$marker-coverage-error: #e54545; // red
$marker-coverage-error: $color-error; // red

.CoveredBlock {
  border-bottom: 1px solid transparent;
}

.CoveredBlock.is-covered {
  border-color: rgba($marker-coverage-covered, 0.5);
}

.CoveredBlock.is-uncovered {
  border-color: rgba($marker-coverage-uncovered, 0.5);
}

.CoveredBlock.is-error {
  border-color: rgba($marker-coverage-error, 0.5);
}






.CoverageGutter {
  width: 20px;
}

.CoverageMarker {
  color: transparent;
  position: relative;

  &:after {
    background-color: $marker-coverage-default;
    border-radius: 2px;
    content: '';
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 8px;
    height: 8px;
    z-index: $app-coverage-marker-layer;
  }
}

.CoverageMarker.is-covered {
  &:after {
    background-color: $marker-coverage-covered;
  }
}

.CoverageMarker.is-uncovered {
  &:after {
    background-color: $marker-coverage-uncovered;
  }
}

.CoverageMarker.is-error {
  &:after {
    background-color: $marker-coverage-error;
  }
}





@keyframes a-EditorToolbarLoading {
  0% {
    opacity: 0;
    transform: translate(-40px, -50px);
  }

  100% {
    opacity: 1;
    transform: translate(0, 0);
  }
}

.EditorToolbar {
  position: absolute;
  display: flex;
  flex-direction: column;
  top: 16px;
  right: 16px;
  z-index: $app-editor-toolbar-layer;
}

.EditorToolbar-button {
  @include button;
  border-radius: 100%;
  box-shadow: 0 8px 22px -3px rgba(black, 0.5);
  color: white;
  font-size: 10px;
  height: 42px;
  padding: 0;
  margin-bottom: 0.6rem;
  position: relative;
  text-shadow: 0 1px 1px rgba(0,0,0,0.2);
  width: 42px;

  > span {
    filter: drop-shadow(3px 3px 6px rgba(black, 0.2));
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  &.has-loadingAnimation {
    animation-name: a-EditorToolbarLoading;
    animation-duration: 500ms;
    animation-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
    animation-fill-mode: both;
  }
}

.EditorToolbar-button.is-run {
  background-color: #d8cc6d;

  &.is-busy {
    background-color: $color-error;
    // FIXME: change color to hsla(11, 100%, 64%, 1); ?
  }

  > span {
    font-size: 14px;
  }
}

.EditorToolbar-button.is-settings {
  background-color: $color-info;

  > span {
    font-size: 18px;
  }
}

.EditorToolbar-button.is-walkthrough {
  background-color: rgba(245, 155, 155, 0.2);
}







.Button {
  border: 1px solid rgba(black, 0.6);
  box-shadow: none;
  color: rgba(black, 0.9);
  cursor: pointer;
  display: inline-block;
  font-family: $app-button-font-family;
  border-radius: 4px;
  font-size: 11px;
  letter-spacing: 1px;
  outline: 0;
  padding: 8px 26px;
  max-width: 100%;
  text-transform: uppercase;
  transition-duration: 200ms;
  transition-property: background-color, border-color;

  &.is-light,
  &.is-light:link,
  &.is-light:visited {
    border-color: rgba(white, 0.85);
    color: rgba(white, 0.95);
  }

  &.is-light:hover,
  &.is-light:active {
    background-color: rgba(white, 0.85);
    color: rgba(black, 0.6);
  }
}
